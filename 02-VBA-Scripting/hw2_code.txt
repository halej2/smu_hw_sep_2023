Sub hw2_stocks()' loop through all worksheetsDim ws As WorksheetFor Each ws In Worksheets' set variables    Dim currTicker As String    Dim totalsum As Double    Dim nextTicker As String    Dim prevTicker As String    Dim row As Long    Dim summaryRow As Integer    Dim closePrice As Double    Dim openPrice As Double    Dim yearlyChange As Double    Dim percentChange As Double    Dim lastRow As Long' headers    ws.Cells(1, 9).Value = "Ticker"    ws.Cells(1, 10).Value = "Open Price"    ws.Cells(1, 11).Value = "Closing Price"    ws.Cells(1, 12).Value = "Yearly Change"    ws.Cells(1, 13).Value = "Percent Change (%)"    ws.Cells(1, 14).Value = "Stock Volume"        ' defaults    totalsum = 0    summaryRow = 2    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).row    openPrice = 0    closePrice = 0        For row = 2 To lastRow            prevTicker = ws.Cells(row - 1, 1).Value        currTicker = ws.Cells(row, 1).Value        nextTicker = ws.Cells(row + 1, 1).Value                ' add total        totalsum = totalsum + ws.Cells(row, 7).Value            ' take open price of new ticker    If prevTicker <> currTicker Then    openPrice = openPrice + ws.Cells(row, 3).Value    Else        ' take closing price of last entry of the year for a ticker        If nextTicker = currTicker Then        closePrice = 0        Else        closePrice = closePrice + ws.Cells(row, 6).Value              ' print calculations            If nextTicker <> currTicker Then                                    ws.Cells(summaryRow, 9).Value = currTicker            ws.Cells(summaryRow, 10).Value = openPrice            ws.Cells(summaryRow, 11).Value = closePrice            ws.Cells(summaryRow, 14).Value = totalsum                        yearlyChange = ws.Cells(summaryRow, 11).Value - ws.Cells(summaryRow, 10).Value            ws.Cells(summaryRow, 12).Value = yearlyChange                        percentChange = (ws.Cells(summaryRow, 11).Value - ws.Cells(summaryRow, 10).Value) / ws.Cells(summaryRow, 10).Value * 100            ws.Cells(summaryRow, 13).Value = percentChange                         ' positive/negative condition             If yearlyChange < 0 Then                    ws.Cells(summaryRow, 12).Interior.ColorIndex = 3                    ws.Cells(summaryRow, 13).Interior.ColorIndex = 3                Else                    ws.Cells(summaryRow, 12).Interior.ColorIndex = 4                    ws.Cells(summaryRow, 13).Interior.ColorIndex = 4                End If                                                ' reset            totalsum = 0            summaryRow = summaryRow + 1            closePrice = 0            openPrice = 0                                End If        End If    End If           ' loop through calculation rows to find the greatest % increas, $ decrease, and stock volume    Next row            Dim lastSummaryRow As Long        Dim greatestVolume As Double        Dim greatestVolumeStock As String        Dim greatestIncrease As Double        Dim greatestIncreaseStock As String        Dim greatestDecrease As Double        Dim greatestDecreaseStock As String                ' defaults        lastSummaryRow = ws.Cells(ws.Rows.Count, 9).End(xlUp).row        greatestVolume = ws.Cells(2, 14).Value        greatestVolumeStock = ws.Cells(2, 9).Value                greatestIncrease = ws.Cells(2, 13).Value        greatestIncreaseStock = ws.Cells(2, 9).Value                greatestDecrease = ws.Cells(2, 13).Value        greatestDecreaseStock = ws.Cells(2, 9).Value                For row = 2 To lastSummaryRow                    ' check for new greatest volume            If ws.Cells(row, 14).Value > greatestVolume Then                greatestVolume = ws.Cells(row, 14).Value                greatestVolumeStock = ws.Cells(row, 9).Value            End If                        ' check for new greatest change            If ws.Cells(row, 13).Value > greatestIncrease Then                greatestIncrease = ws.Cells(row, 13).Value                greatestIncreaseStock = ws.Cells(row, 9).Value            End If                        ' check for new lowest decrease            If ws.Cells(row, 13).Value < greatestDecrease Then                greatestDecrease = ws.Cells(row, 13).Value                greatestDecreaseStock = ws.Cells(row, 9).Value            End If                    ' print headers and found answers                ws.Cells(1, 19).Value = "Ticker"        ws.Cells(1, 20).Value = "Value"                ws.Cells(2, 18).Value = "Greatest % Increase"        ws.Cells(2, 19).Value = greatestIncreaseStock        ws.Cells(2, 20).Value = greatestIncrease                        ws.Cells(3, 18).Value = "Greatest % Decrease"        ws.Cells(3, 19).Value = greatestDecreaseStock        ws.Cells(3, 20).Value = greatestDecrease                        ws.Cells(4, 18).Value = "Greatest Total Volume"        ws.Cells(4, 19).Value = greatestVolumeStock        ws.Cells(4, 20).Value = greatestVolume            Next row    Next    End Sub